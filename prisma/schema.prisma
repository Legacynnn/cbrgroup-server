// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String      @id @default(uuid())
  name      String      @unique
  imageUrl  String?     // Optional image URL for the category
  featured  Boolean     @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  
  // Relationship to furniture
  furniture Furniture[]
}

model ShowroomImage {
  id          String    @id @default(uuid())
  url         String
  position    Int       @default(0)
  title       String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("showroom_images")
}

model FurnitureImage {
  id          String    @id @default(uuid())
  url         String
  position    Int       @default(0)
  furniture   Furniture @relation(fields: [furnitureId], references: [id], onDelete: Cascade)
  furnitureId String

  @@index([furnitureId])
}

model Furniture {
  id                    String             @id @default(uuid())
  name                  String
  size                  Json?              
  description           String?            
  producer              String?            
  price                 Decimal?           
  featured              Boolean            @default(false)
  promotionPrice        Decimal?           
  isPromotionActive     Boolean            @default(false)
  promotionExpiresAt    DateTime?          
  inStock               Boolean            @default(true)
  categoryId            String             // Foreign key to Category
  category              Category           @relation(fields: [categoryId], references: [id], onDelete: Restrict)
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt
  variations            FurnitureVariation[]
  images                FurnitureImage[]   

  @@index([categoryId])
  @@index([featured])
  @@index([isPromotionActive])
  @@index([promotionExpiresAt])
}

model FurnitureVariation {
  id                   String   @id @default(uuid())
  name                 String   
  textureType          String   
  color                String?  
  colorCode            String?  
  textureImageUrl      String   
  associatedImageIds   Json?    
  inStock              Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  furniture     Furniture @relation(fields: [furnitureId], references: [id], onDelete: Cascade)
  furnitureId   String

  @@index([furnitureId])
}